@model DirectorySite.Models.ViewModel.CatalogStatesViewModel

<partial name="./Partials/PageHeader" />

<div class="fluid-container ">
    <div class="row align-items-start">
        <div class="col-2">
            <partial name="./Partials/CatalogSidebar"/>
        </div>

        <div class="col-10">
            <form asp-action="States" method="get" id="formFilters" class="d-flex align-items-center  border rounded px-2 py-1 mb-2">
                <select id="selectCountry" asp-for="CountryId" asp-items="@(Model.CountriesCatalog)" class="form-select-sm" style="max-width: 16rem;">
                    <option value="0">Seleccione un elemento</option>
                </select>

                <button type="button" class="ml-auto ms-auto btn btn-success" data-bs-toggle="modal" data-bs-target="#newElementModal">Agregar nuevo</button>
            </form>

            <div class="border rounded">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                        <th scope="col">#</th>
                        <th scope="col">Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if(Model.States != null){
                            var i = 1;
                            foreach(var item in Model.States){
                                <tr>
                                    <th scope="row">@i</th>
                                    <td>@item.Id</td>
                                    <td>@item.Name</td>
                                    <td>
                                        <a asp-action="Municipalities" asp-controller="Catalog" asp-route-stateId="@item.Id" class="btn btn-link m-0 p-0" tabindex="-1" role="button" aria-disabled="true">
                                            Mostrar Municipios
                                        </a>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<div class="modal fade" id="newElementModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" >
  <div class="modal-dialog">
    <form id="new-element-form" class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Agregar elemento</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <div class="mb-2">
            <label for="new-element-country" class="col-form-label">Pais</label>
            @Html.TextBoxFor(item => item.CountryId, new { @class="form-control", @hidden="true"})
            @Html.TextBoxFor(item => item.CountryName, new { @class="form-control", @disabled="true"})
        </div>
      
        <div class="mb-2">
            <label for="new-element-name" class="col-form-label">Nombre:</label>
            <input type="text" class="form-control" id="new-element-name" name="name">
        </div>
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        <button type="submit" class="btn btn-success" id="new-element-submit" >Guardar Cambios</button>
      </div>

    </form>
  </div>
</div>

@section Scripts {
    <script>

        function handleSubmitForm(event){
            event.preventDefault();
            
            const form = $(this);
            const dataForm = form.serialize();
            
            $.ajax({
                url: '/catalog/states',
                type: 'POST',
                data: dataForm,
                success: function(response) {
                    Swal.fire({
                        title: "Datos actualizados",
                        icon: "success"
                    });
                },
                error: function(xhr, status, error) {
                    if(xhr.status == 422)
                    {
                        const { errors } = xhr.responseJSON || {};
                        const errorMessages = errors ? Object.values(errors).flat().join('\n') : "Datos inválidos.";
                        Swal.fire({
                            title: "Uno o más datos son inválidos",
                            text: errorMessages,
                            icon: "warning",
                            confirmButtonText: "Revisar"
                        });
                        return;
                    }

                    Swal.fire({
                        title: "Error al actualizar los datos",
                        text: xhr.statusText || "Error desconocido",
                        icon: "error"
                    });
                }
            });

        }

        function dimissModal(){
            $("#new-element-name").val("");
            $("#newElementModal").modal('hide');
        }

        $(document).ready(function(){
            $("#new-element-form").submit(handleSubmitForm);
            
            $("#selectCountry").on("change", function(e){
                var constryId = $(this).val();

                // check if it is a valid number and greater than 0
                if (isNaN(constryId) || constryId <= 0) {
                    event.preventDefault();
                    return;
                }
                
                $("#formFilters").submit();
            });
        });

    </script>
}