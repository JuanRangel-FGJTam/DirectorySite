@model IEnumerable<DirectorySite.Models.RecoveryAccountResponse>
@{
    int currentPage = Convert.ToInt32(ViewBag.CurrentPage);
    int totalPages = Convert.ToInt32(ViewBag.TotalPages);
    int totalRecords = Convert.ToInt32(ViewBag.TotalRecords);
    int skipRecords = Convert.ToInt32(ViewBag.Skip);
}

@functions
{
    string GetCustomRowClass(RecoveryAccountResponse? row)
    {
        return row switch
        {
            null => string.Empty,
            { AttendingAt: not null } => "table-success",
            { DeletedAt: not null } => "table-danger",
            _ => string.Empty
        };
    }
}

<div class="d-flex flex-column" style="gap:0.5rem;">
    <div class="d-flex align-items-center px-1 py-2" style="gap:0.5rem;">
        <select id="selectFilter" class="form-select form-select-sm" aria-label="Filtro por estatus" style="max-width: 12rem;" onchange="selectFilterOnChange(event)">
            <option value="0">Todos</option>
            <option value="1">Pendientes</option>
            <option value="2">Aprobados</option>
            <option value="3">Cancelados</option>
        </select>
    </div>

    <div class="h-100 overflow-auto">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Nombre</th>
                    <th scope="col">Contacto</th>
                    <th scope="col">
                        Fecha Regitro
                        <span aria-hidden="true">&blacktriangledown;</span>
                    </th>
                    <th scope="col">Atendido</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var i = skipRecords + 1;
                }
                @foreach(var record in Model)
                {
                    <tr class="@GetCustomRowClass(record)">
                        <td scope="row">@i</td>
                        <td>
                            <div class="flex align-items-center">
                                <div class="text-sm text-uppercase">@record.FullName</div>
                                <div class="text-sm">@record.Curp</div>
                            </div>
                        </td>
                        <td>@record.ContactEmail</td>
                        <td>
                            <div class="flex align-items-center">
                                <div class="text-sm text-uppercase">@record.CreatedAt.ToString("dd MMM yyyy")</div>
                                <div class="text-sm">@record.CreatedAt.ToString("HH:mm")</div>
                            </div>
                        </td>
                        <td>
                            @if(record.FinishedAt != null)
                            {
                                <div class="flex align-items-center">
                                    <div class="text-sm text-uppercase">@record.FinishedAt.Value.ToString("dd MMM yyyy")</div>
                                    <div class="text-sm">@record.FinishedAt.Value.ToString("HH:mm")</div>
                                </div>
                            }
                        </td>
                        <td>
                            <a class="btn btn-link" asp-action="show" asp-controller="RecoveryAccount" asp-route-recordID="@record.Id">Mostrar</a>
                        </td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex align-items-center justify-content-between">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if(currentPage > 1)
                {
                    <li class="page-item">
                        <button type="button" class="page-link" onclick="goToPage(@(currentPage - 1))" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </button>
                    </li>
                }
                @for (int p = 1; p <= totalPages; p++)
                {
                    <li class="page-item @(currentPage == p ? "active" : "")">
                        <button type="button" class="page-link" onclick="goToPage(@p)">@p</button>
                    </li>
                }
                @if(currentPage < totalPages)
                {
                    <li class="page-item">
                        <button type="button" class="page-link" onclick="goToPage(@(currentPage + 1))" aria-label="Previous">
                            <span aria-hidden="true">&raquo;</span>
                        </button>
                    </li>
                }
            </ul>
        </nav>

        <p class="fs-6">Total: @totalRecords.ToString("n0")</p>
    </div>
</div>
