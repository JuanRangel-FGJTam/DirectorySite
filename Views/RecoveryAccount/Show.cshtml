@model DirectorySite.Models.RecoveryAccountResponse
@{
    ViewData["ActivePage"] = "Peticion";
    var edition = (Model.AttendingAt == null && Model.DeletedAt == null);
    IEnumerable<SearchPersonResponse> peopleCoincidences = ViewBag.PeopleCoincidences;
}
@functions
{
    string GetBorderColor()
    {
        if(Model.AttendingAt != null)
        {
            return "border-success";
        }
        if(Model.DeletedAt != null)
        {
            return "border-danger";
        }
        return "border-secondary";
    }
}

<div class="d-flex align-items-baseline mb-2">
    <h1 id="solicitud" class="display-6 d-flex align-items-baseline">
        @ViewBag.Title
    </h1>
    <div class="ms-auto">
        <partial name="../Shared/Breadcrumb">
    </div>
</div>

<div class="container ">
    <div class="row">
        <div class="col-8">
            <div class="row p-2">
                <div class="col-12 border-bottom mb-2">
                    <h4>Datos Generales</h4>
                </div>

                <div class="col-md-6">
                    <label class="label">Nombre</label>
                    <input type="text" class="form-control" disabled value="@Model.Name">
                </div>
                
                <div class="col-md-6">
                    <label class="label">Apellidos</label>
                    <input type="text" class="form-control" disabled value="@Model.FirstName @Model.LastName">
                </div>
                
                <div class="col-md-6">
                    <label class="label">CURP</label>
                    <input type="text" class="form-control" disabled value="@Model.Curp">
                </div>

                <div class="col-md-6">
                    <label class="label">RFC</label>
                    <input type="text" class="form-control" disabled value="@Model.Rfc">
                </div>


                <div class="col-md-6">
                    <label class="label">Genero</label>
                    <input type="text" class="form-control" disabled value="@Model.GenderName">
                </div>

                <div class="col-md-6">
                    <label class="label">Fecha de nacimiento</label>
                    <input type="text" class="form-control text-capitalize" disabled value="@Model.BirthDate.ToString("dd/MM/yyyy")">
                </div>

                <div class="col-md-6">
                    <label class="label">Nacionalidad</label>
                    <input type="text" class="form-control" disabled value="@Model.NationalityName">
                </div>

                <div class="col-md-6">
                    <label class="label">Ocupacion</label>
                    <input type="text" class="form-control" disabled value="@Model.OccupationName">
                </div>

                <div class="col-md-6">
                    <label class="label">Estado Civil</label>
                    <input type="text" class="form-control" disabled value="@Model.MaritalStatusName">
                </div>
            </div>

        </div>

        <div class="col-4">
            <div class="row p-2">
                <div class="col-12 border-bottom mb-2">
                    <h4>Datos de Contacto</h4>
                </div>

                <div class="col-12">
                    <label class="label">Correo Electronico</label>
                    <input type="text" class="form-control" disabled value="@Model.ContactEmail">
                </div>

                <div class="col-12">
                    <label class="label">Correo Electronico Alterno</label>
                    <input type="text" class="form-control" disabled value="@Model.ContactEmail2">
                </div>
                
                <div class="col-12">
                    <label class="label">Telefono Contacto</label>
                    <input type="text" class="form-control" disabled value="@Model.ContactPhone">
                </div>

                <div class="col-12">
                    <label class="label">Telefono Contacto Alterno</label>
                    <input type="text" class="form-control" disabled value="@Model.ContactPhone2">
                </div>
            </div>
        </div>

        <div class="col-6">
            <div class="row p-2">
                <div class="col-12 border-bottom mb-2">
                    <h4>Solicitud</h4>
                </div>

                <div class="col-12">
                    <label class="label">Fecha solicitud</label>
                    <input type="text" class="form-control" disabled value="@Model.CreatedAt">
                </div>

                <div class="col-12">
                    <label class="label">Comentarios</label>
                    <textarea type="text" class="form-control" disabled rows="4" style="resize: none;"> @Model.RequestComments</textarea>
                </div>
            </div>
        </div>

        <div class="col-6">
            <div class="row p-2">
                <div class="col-12 border-bottom mb-2">
                    <h4>Archivos</h4>
                </div>

                <div class="col-12">
                    <label class="label mb-1">Archivos adjuntos: @Model.TotalDocuments</label>
                </div>

                <div class="col-12">
                    <ul>
                        @foreach(var f in Model.Files??[])
                        {
                            <li>
                                <a href="@f.FileUrl" target="_blank" class="btn btn-link p-0 m-0 text-truncate">@string.Join(" : ", [f.DocumentTypeName, f.FileName])</a>
                            </li>
                        }
                        @if(!(Model.Files??[]).Any())
                        {
                            <div class="alert alert-warning" role="alert">
                                No hay archivos cargados
                            </div>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-2">
    <div class="row align-items-start">
        <div class="col-12 border-bottom mb-2">
            <h4>Coincidencia de Personas</h4>
        </div>

        <div class="col-12">
            @await Html.PartialAsync("./Partials/PeopleCoincidences.cshtml", peopleCoincidences)
        </div>
    </div>
</div>


<div class="container border border-2 rounded @(GetBorderColor()) rounded mt-4 mb-2 p-4">
    <form id="finishRequestForm" class="row" method="post">
        <div class="col-12 border-bottom mb-2">
            <h4 id="respuesta">Respuesta</h4>
        </div>

        @if(edition)
        {
        <div class=" col-12 mb-2">
            <input class="form-check-input" type="checkbox" value="" id="notifyEmail" checked />
            <label class="form-check-label" for="notifyEmail">
                Notificar por correo electronico
            </label>
        </div>
        }

        @if(edition)
        {
        <div class="col-12 mb-2">
            <label class="form-check-label" for="template">
                Template de respuesta
            </label>
                <select id="template" class="form-control" onchange="responseTemplateChanged(event)">
                    <option selected disabled>Seleccione un elemento</option>
                    @foreach(var t in ViewBag.Templates)
                    {
                        <option value="@t.Id">@t.Label</option>
                    }
                </select>
        </div>
        }

        @if(!string.IsNullOrEmpty(ViewBag.CoincidencePersonName) && !string.IsNullOrEmpty(ViewBag.NewPersonEmail))
        {
            <div id="alert-warning-wrapper" class="col-12 px-4 pb-2 d-none">
                <div class="alert alert-warning" role="alert">
                    <strong>Se actualizara el correo de la persona '<span>@ViewBag.CoincidencePersonName</span>' por el correo '<span>@ViewBag.NewPersonEmail</span>'</strong>
                </div>

                <div class="form-check mb-4">
                    <label class="form-check-label">
                    <input id="updated-email" type="checkbox" class="form-check-input" value="checkedValue" checked>
                        Actualizara automaticamente el electronico
                    </label>
                </div>
            </div>
        }

        <div class="col-12">
            <label class="label fs-6">Comentarios</label>
            <textarea id="txtComments" type="text" class="form-control" rows="4" disabled="@(!edition)">@Model.ResponseComments</textarea>
        </div>
        
        @if(edition)
        {
            <div class="col-12 d-flex justify-content-between pt-4">
                <button id="btn-back" type="button" class="btn btn-secondary" style="width:8rem;">Regresar</button>
                <button id="btn-finish" type="button" class="btn btn-success" style="width:8rem;">Concluir</button>
            </div>
        }

        @if(Model.AttendingAt != null)
        {
            <div class="mt-2">
                <label class="label fs-6">Finilizado el dia: <u>@Model.AttendingAt</u></label>
            </div>
            <div class="mt-2">
                <label class="label fs-6">Atendido por: <u>@Model.UserAttended</u></label>
            </div>
        }

        @if(Model.DeletedAt != null)
        {
            <div class="mt-2">
                <label class="label fs-6">Cancelado el dia: <u>@Model.DeletedAt</u></label>
            </div>
            <div class="mt-2">
                <label class="label fs-6">Cancelado por: <u>@Model.UserDeleted</u></label>
            </div>
        }

        @if(!string.IsNullOrEmpty(Model.EmailNotificationContent))
        {
            <label class="label fs-6 py-1 mt-1">Correo de respuesta:</label>
            <div class="border rounded p-2 bg-white shadow-sm" style="color: #333; font-family: monospace; min-height: 6rem;">
                @Html.Raw(Model.EmailNotificationContent)
            </div>
        }

        @if(!string.IsNullOrEmpty(Model.EmailNotificationResponse))
        {
            <label class="label fs-6 py-1 mt-1">Estatus Envio:</label>
            <div class="border rounded p-2 bg-white shadow-sm" style="color: #333; font-family: monospace; min-height: 4rem;">
                @Model.EmailNotificationResponse
            </div>
        }

    </form>
</div>

@section scripts {
    <script>
        let currentRequestID = '@Html.Raw(Model.Id)';

        function finishRequest()
        {
            const form = $(this);
            const url = `/RecoveryAccount/${currentRequestID}`;
            const method = 'PATCH';
            const messageText = $('#txtComments').val();
            const notifyEmail = $('#notifyEmail').is(':checked');
            const templateId = $('#template').val();
            const updateEmail = $('#updated-email').is(':checked');

            if(templateId == undefined)
            {
                Swal.fire({
                    title: "Seleccione un template de respuesta",
                    icon: "warning"
                });
                return;
            }

            // Create a FormData object
            var formData = new FormData();
            formData.append('comments', messageText);
            formData.append('notifyEmail', notifyEmail);
            formData.append('templateId', templateId);
            formData.append('updateEmail', updateEmail);

            $.ajax({
                url: url,
                type: method,
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    Swal.fire({
                        title: "Solicitud finalizada",
                        icon: "success"
                    }).then((result) => {
                        window.location.href = "/recoveryAccount";
                    });
                },
                error: function(xhr, status, error) {
                    var {message} = xhr.responseJSON;
                    console.error('Error:', error);

                    Swal.fire({
                        title: message ?? "Error al realizar la peticion",
                        icon: "error"
                    });
                }
            });
        }
        
        function goBackClick()
        {
            window.location.replace("@Url.Action("Index", "RecoveryAccount")");
        }

        function responseTemplateChanged(event)
        {
            var _currentValue = Number($(event.target).val());
            if(_currentValue != 1) // 1 => Solicitud Finalizada
            {
                $("#alert-warning-wrapper").addClass('d-none');
                return;
            }

            $("#alert-warning-wrapper").removeClass('d-none');
        }

        jQuery(document).ready(()=>
        {
            $("#btn-finish").on("click", finishRequest);
            $("#btn-back").on("click", goBackClick);
        });
    </script>
}